<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kitri.web_project.mappers.CommentMapper">

    <select id="getTopLevelComments" parameterType="long" resultType="com.kitri.web_project.dto.comment.CommentDto">
        SELECT free_board_comment.id as id, user_id as userId, content, created_at as createdAt,  like_count as likeCount, nick_name as name,
               img_path as imgPath
        FROM free_board_comment join user on user.id = user_id
        WHERE parent_comment_id IS NULL
        AND board_id = #{id}
        ORDER BY created_at ASC
    </select>
    

    <select id="getChildComments" parameterType="long" resultType="com.kitri.web_project.dto.comment.CommentDto">
        SELECT free_board_comment.id as id, user_id as userId, content, created_at as createdAt,  like_count as likeCount, nick_name as name,
               img_path AS imgPath, parent_comment_id as parentCommentId
        FROM free_board_comment join user on user.id = user_id
        WHERE parent_comment_id = #{parentCommentId}
        AND board_id = #{id}
        ORDER BY created_at ASC
    </select>

    <select id="childCount" parameterType="long" resultType="int">
        select count(*) from free_board_comment where parent_comment_id = #{id}
    </select>

    <select id="getMyComments" resultType="com.kitri.web_project.dto.comment.CommentDto">
        SELECT fbc.id as id, fbc.user_id as userId, fbc.board_id as boardId, fbc.content, fbc.created_at as createdAt, fbc.like_count as likeCount, fb.subject,
               (SELECT COUNT(*) FROM free_board_comment WHERE user_id = #{id}) AS totalRowCount
        FROM free_board_comment fbc
        JOIN free_board fb ON fbc.board_id = fb.id
        WHERE fbc.user_id = #{id}
        ORDER BY fbc.created_at desc
        LIMIT #{offset}, #{itemsPerPage}
    </select>

    <insert id="addComment" parameterType="com.kitri.web_project.dto.comment.RequestComment">
        insert into free_board_comment (board_id, user_id, content)
        values (#{id}, #{userId}, #{content})
    </insert>

    <update id="addCommentCount">
        UPDATE free_board
        SET comment_count = comment_count + 1
        WHERE id = #{id};
    </update>

    <update id="editComment" parameterType="com.kitri.web_project.dto.comment.CommentDto">
        UPDATE free_board_comment SET content = #{content} WHERE id = #{id}
    </update>


    <delete id="deleteComment" parameterType="long">
        DELETE FROM free_board_comment WHERE id = #{commentId}
-- --      DELETE FROM free_board_comment WHERE id = #{commentId} OR parent_comment_id = #{commentId}
--         DELETE FROM free_board_comment
--         WHERE id = #{commentId} OR parent_comment_id IN (SELECT id FROM free_board_comment WHERE parent_comment_id = #{commentId});

    </delete>

    <update id="minusCommentCount">
        UPDATE free_board
        SET comment_count = (
            SELECT COUNT(*)
            FROM free_board_comment AS fbc
            WHERE fbc.board_id = #{boardId}
        )
        WHERE id = #{boardId};
    </update>

    <insert id="addNewComment" parameterType="com.kitri.web_project.dto.comment.RequestComment">
        INSERT INTO free_board_comment (board_id, user_id, content, parent_comment_id)
        VALUES (#{boardId}, #{userId}, #{content}, #{parentCommentId})
    </insert>

    <update id="editReply" parameterType="com.kitri.web_project.dto.comment.RequestReplyComment">
        UPDATE free_board_comment
        SET content = #{content}
        WHERE id = #{commentId}
    </update>


    <delete id="deleteReply" parameterType="long">
        DELETE FROM free_board_comment WHERE id = #{replyId} OR parent_comment_id = #{replyId}
    </delete>


    <update id="incrementReplyLikeCount" parameterType="long">
        UPDATE free_board_comment SET like_count = like_count + 1
        WHERE id = #{replyId}
    </update>

    <update id="decrementReplyLikeCount" parameterType="long">
        UPDATE free_board_comment SET like_count = like_count - 1
        WHERE id = #{repliyId}
    </update>


<!--    <select id="checkCommentLikeExists" parameterType="com.kitri.web_project.dto.comment.RequestCommentLike">-->
<!--       SELECT EXISTS (-->
<!--          SELECT 1 FROM free_board_comment_like-->
<!--          WHERE user_id = #{userId} AND board_id = #{boardId} AND comment_id = #{commentId}-->
<!--          ) AS likeExists;-->
<!--    </select>-->

    <select id="checkCommentLikeExists" parameterType="com.kitri.web_project.dto.board.RequestBoardLike" resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN TRUE ELSE FALSE END AS likeExists
        FROM free_board_comment_like
        WHERE user_id = #{userId} AND comment_id = #{commentId}
    </select>


    <insert id="insertCommentLike" parameterType="com.kitri.web_project.dto.comment.RequestCommentLike">
       INSERT INTO free_board_comment_like (user_id, board_id, comment_id)
       VALUES (#{userId}, #{boardId}, #{commentId})
    </insert>

    <delete id="deleteCommentLike" parameterType="com.kitri.web_project.dto.comment.RequestCommentLike">
        DELETE FROM free_board_comment_like
        WHERE user_id = #{userId} AND board_id = #{boardId} AND comment_id = #{commentId}
    </delete>

<!--    <select id="getCommentLikeStatus" parameterType="Long" resultType="boolean">-->
<!--        SELECT COUNT(*) > 0 AS likeStatus-->
<!--        FROM free_board_comment_like-->
<!--        WHERE user_id = #{userId} AND comment_id = #{commentId}-->
<!--    </select>-->

    <select id="getCommentLikeStatus" parameterType="com.kitri.web_project.dto.comment.RequestCommentLike" resultType="boolean">
        SELECT COUNT(*) > 0 AS likeStatus
        FROM free_board_comment_like
        WHERE user_id = #{userId} AND comment_id = #{commentId}
    </select>


    <select id="checkReplyLikeExists" parameterType="com.kitri.web_project.dto.comment.RequestCommentLike">
        SELECT EXISTS (
            SELECT 1 FROM free_board_comment_like
            WHERE user_id = #{userId} AND board_id = #{boardId} AND comment_id = #{commentId}
        ) AS likeExists;
    </select>

    <insert id="insertReplyLike" parameterType="com.kitri.web_project.dto.comment.RequestCommentLike">
        INSERT INTO free_board_comment_like (user_id, board_id, comment_id)
        VALUES (#{userId}, #{boardId}, #{commentId})
    </insert>

    <delete id="deleteReplyLike" parameterType="com.kitri.web_project.dto.comment.RequestCommentLike">
        DELETE FROM free_board_comment_like
        WHERE user_id = #{userId} AND board_id = #{boardId} AND comment_id = #{commentId}
    </delete>

    <select id="getReplyLikeStatus" parameterType="Long" resultType="boolean">
        SELECT COUNT(*) > 0 AS likeStatus
        FROM free_board_comment_like
        WHERE comment_id = #{commentId}
    </select>

    <select id="getTotalCommentCount" resultType="int" parameterType="long">
        SELECT COUNT(*) FROM free_board_comment WHERE board_id = #{boardId}
    </select>

</mapper>